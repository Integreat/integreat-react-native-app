// See https://github.com/luggit/react-native-config/blob/master/android/dotenv.gradle for reference

def createConfig () {
    def buildConfig = [:]

    def buildConfigProperties = new Properties()
    def buildConfigFile = new File("$project.rootDir/buildConfig.tmp.xcconfig")
    if (!buildConfigFile.exists()) {
        println("*****************++++++++*******")
        println("***** Missing BUILD_CONFIG *****")
        println("************************++++++**")
        println("Did you forget to run 'yarn create-xcconfig' before?")
        return
    }

    buildConfigFile.withInputStream {stream ->
        buildConfigProperties.load(stream)
    }

    // Java properties use the same syntax as xcconfig files
    // https://docs.oracle.com/javase/7/docs/api/java/util/Properties.html
    buildConfigProperties.each {
        buildConfig.put(it.getKey(), it.getValue())
    }

    println("Build config: $buildConfig")
    project.ext.set("buildConfig", buildConfig)
}

createConfig()

android {
    defaultConfig {
        // TODO Add application id to build configs and throw if not found
        applicationId project.buildConfig.getOrDefault("BUILD_CONFIG_APPLICTION_ID", "tuerantuer.app.integreat")
        project.buildConfig.each { k, v ->
            def escaped = v.replaceAll("%","\\\\u0025")
            // Make build config values available as string resource, e.g. for use in AndroidManifest
            resValue "string", k, "\"$escaped\""
        }
    }
}